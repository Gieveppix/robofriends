{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","CardList","robots","map","user","i","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","lenght","components_SearchBox","components_Scroll","components_CardList","Component","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"8KAYeA,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,0CCOCY,EAZF,SAACC,GACb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAAMQ,GAAhC,eACrBP,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,MACXR,EAAAC,EAAAC,cAAA,SAAIH,EAAMU,UCaCC,EAlBE,SAAAlB,GAAgB,IAAbmB,EAAanB,EAAbmB,OACnB,OACCX,EAAAC,EAAAC,cAAA,WAEES,EAAOC,IAAI,SAACC,EAAMC,GAClB,OACAd,EAAAC,EAAAC,cAACa,EAAD,CACCC,IAAKF,EACLP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,YCEPQ,EAbG,SAAAzB,GAAkCA,EAAhC0B,YAAgC,IAAnBC,EAAmB3B,EAAnB2B,aAChC,OACCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,SACAC,UAAU,mCACViB,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCEI,EARA,SAACxB,GACf,OACCC,EAAAC,EAAAC,cAAA,OAAKsB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,UACzC3B,EAAM4B,WC2CKC,qBAzCd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAiBDI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAjB1CZ,EAAKa,MAAQ,CACZ/B,OAAQ,GACR4B,YAAa,IAJDV,mFAQM,IAAAc,EAAAX,KACnBY,MAAM,8CACJtD,KAAK,SAAAuD,GACL,OAAOA,EAASC,SAEhBxD,KAAK,SAAAyD,GACLJ,EAAKL,SAAU,CAAE3B,OAAQoC,uCAQnB,IAAAC,EACwBhB,KAAKU,MAA7B/B,EADAqC,EACArC,OAAQ4B,EADRS,EACQT,YACVU,EAAiBtC,EAAOuC,OAAO,SAAAC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASd,EAAYa,iBAEtD,OAA0B,IAAlBzC,EAAO2C,OACftD,EAAAC,EAAAC,cAAA,wBAECF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACqD,EAAD,CAAWpC,aAAca,KAAKI,iBAC9BpC,EAAAC,EAAAC,cAACsD,EAAD,KACCxD,EAAAC,EAAAC,cAACuD,EAAD,CAAU9C,OAASsC,aAnCNS,oBCClBC,IAASC,OACR5D,EAAAC,EAAAC,cAAC2D,EAAD,MACCC,SAASC,eAAe,SAM1B9E","file":"static/js/main.6250ffe3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${props.id}?7200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{props.name}</h2>\r\n\t\t\t\t<p>{props.email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t/>)\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', height: '800px' }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t); //ITS WRAPPING AROUND CARDLIST\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component  {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(users => {\r\n\t\t\t\tthis.setState( { robots: users } )\r\n\t\t\t})\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\t//THIS IS HOW YOU UPDATE STATE\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state; //makes things easier\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn (robots.lenght === 0) ? //same as if-else\r\n\t\t<h1>Loading...</h1> :\r\n\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={ filteredRobots } />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons'\n\nReactDOM.render(\n\t<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}